{"version":3,"sources":["components/DigimonCard.tsx","components/Header.tsx","components/Favorite.tsx","Data/Objects.ts","Data/Database.ts","Data/index.ts","Data/Populate.ts","routes/Home/index.tsx","components/MoveCard.tsx","routes/Digimon/index.tsx","routes/Moves/index.tsx","components/SupportCard.tsx","routes/Supports/index.tsx","routes/index.tsx","services/Notification.ts","components/NotificationBay.tsx","app.tsx","serviceWorker.ts","index.tsx"],"names":["TypeMap","Data","Free","Vaccine","Virus","textMap","Earth","Dark","Fire","Water","Plant","Styles","Container","margin","ImageBox","position","NameBanner","left","right","bottom","backgroundColor","textOverflow","overflow","whiteSpace","SlotStyle","fontSize","width","height","DigimonCard","_PureComponent","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","_this$props","props","digimon","link","size","nameless","react_default","a","createElement","dist","className","concat","attribute","toLowerCase","style","as","undefined","href","id","objectSpread","maxWidth","src","image","alt","name","display","flexDirection","alignItems","justifyContent","padding","type","flex","slots","children","memory","PureComponent","defaultProps","Header","_React$Component","match","path","window","location","hash","top","React","Component","HeaderSearch","_ref","Icon","objectWithoutProperties","zIndex","Title","assign","Content","Favorite","_React$PureComponent","onClick","fav","Digimon","stage","sprite","favorite","support_skill_id","digivolveTo","digivolveFrom","moves","supportSkill","stats","_toggleFavorite","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","abrupt","db","update","stop","_join","_callee2","_ref2","support_skill","digivolveToData","digivolveFromData","movelearns","_ref3","_ref4","moveMap","digivolveToMap","digivolveFromMap","_context2","Promise","all","supports","get","digivolve","where","equals","toArray","movelearn","sortBy","sent","slicedToArray","anyOf","map","_ref5","move_id","_ref6","to","_ref7","from","reduce","move","level","digi","require","ret","Move","sp_cost","power","inheritable","description","_digimon","_callee3","_context3","Support","_Dexie","Database","_this","call","autoOpen","version","stores","table","mapToClass","assertThisInitialized","on","console","log","bulkPut","data","e","Dexie","Home","_Component","onChange","setState","target","toggleFavorite","favorites","state","filter","_this$state","includes","State","_componentDidMount","_componentWillUnmount","_this$state2","Favorite_Favorite","placeholder","flexWrap","DigimonCard_DigimonCard","AttrMap","Neutral","Light","Wind","Electric","Physical","Magic","Fixed","MoveCard","_getPrototypeOf2","_len","length","args","Array","_key","open","digimonOpen","toggleOpen","toggleDigimon","withDigimon","Fragment","toString","padStart","Footer","Item","paddingRight","_this2","parseInt","params","join","then","_componentWillReceiveProps","_this3","_x","_this4","Left","textDecorationLine","changeStat","hp","sp","atk","def","int","spd","MoveCard_MoveCard","Moves","moveFilter","words","split","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","word","err","return","toggleFilters","filterOpen","Moves_FilterIcon","FilterIcon","cursor","SupportCard","support","Supports","SupportCard_SupportCard","Routes","Switch","Route","exact","component","NotificationService","_notify","text","values","subscribers","forEach","sub","nextID","NotificationBay","notes","destroy","slice","subscribe","note","i","ThemeOverrides","primary","tabs-link-active-color","tabs-boxed-link-active-background-color","tabs-link-color","custom-colors","e-fire","e-water","e-plant","e-electric","e-earth","e-wind","e-neutral","e-light","e-dark","App","overrides","HashRouter","minHeight","Header_Header","routes_Routes","NotificationBay_NotificationBay","body","document","querySelector","classList","add","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","notify","onUpdate","onSuccess","catch","error","ReactDOM","render","app","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.1b7c398e.chunk.js","sourcesContent":["import React, { PureComponent, CSSProperties } from \"react\";\nimport { Box, Image, Level, Icon } from 'bulma-styled-components'\nimport { Digimon } from \"../Data/Objects\";\n\ntype Props = {\n  digimon: Digimon,\n  size?: 16 | 24 | 32 | 48 | 64 | 96 | 128,\n  link?: boolean\n  nameless?: boolean\n}\n\nconst TypeMap: { [type: string]: string } = {\n  Data: 'fas fa-cube',\n  Free: 'fas fa-minus',\n  Vaccine: 'fas fa-syringe',\n  Virus: 'fas fa-spider',\n}\n\nconst textMap: { [type: string]: string } = {\n  Earth: 'has-text-white-bis',\n  Dark: 'has-text-white-bis',\n  Fire: 'has-text-white-bis',\n  Water: 'has-text-white-bis',\n  Plant: 'has-text-white-bis',\n}\n\nconst Styles: {[name: string]: CSSProperties} = {\n  Container: {\n    margin: 5\n  },\n  ImageBox: {\n    position: 'relative'\n  },\n  NameBanner: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(70, 70, 70, .7)',\n    textOverflow: 'ellipsis',\n    overflow: 'hidden',\n    whiteSpace: 'nowrap',\n  },\n}\n\nconst SlotStyle = { fontSize: '0.5rem', width: '0.70rem', height: '0.5rem' }\n\nexport class DigimonCard extends PureComponent<Props> {\n  static defaultProps = {\n    size: 96\n  }\n  render() {\n    const { digimon, link, size, nameless } = this.props\n    return  (\n      <Box\n        className={`is-paddingless is-clipped has-background-e-${digimon.attribute.toLowerCase()}`}\n        style={Styles.Container}\n      >\n        <Box\n          as={link ? 'a' : undefined}\n          href={`#/digimon/${digimon.id}`}\n          className=\"is-paddingless is-marginless has-background-grey-lighter is-clipped\"\n          style={{ ...Styles.ImageBox, maxWidth: size }}\n        >\n          <Image className={`is-${size}x${size}`}>\n            <img src={digimon.image} alt=\"digimon\"/>\n            {!nameless && (\n              <div style={Styles.NameBanner} className=\"has-text-white has-text-centered is-size-7\" >\n                {digimon.name}\n              </div>\n            )}\n          </Image>\n        </Box>\n        <div style={{ width: '100%', display: 'flex', flexDirection: 'row', alignItems: 'center', justifyContent: 'center', padding: 0, margin: 0 }}>\n          <Icon className={`is-size-7 ${textMap[digimon.attribute]}`}>\n            <i className={`${TypeMap[digimon.type]}`}/>\n          </Icon>\n          <div style={{ display: 'flex', flex: 1, alignItems: 'center', justifyContent: 'center' }} className={textMap[digimon.attribute]}>\n            <Icon style={SlotStyle} >\n              <i className={`${digimon.slots >= 1 ? 'fas' : 'far'} fa-square`}/>\n            </Icon>\n            <Icon style={SlotStyle}>\n              <i className={`${digimon.slots >= 2 ? 'fas' : 'far'} fa-square`}/>\n            </Icon>\n            <Icon style={SlotStyle}>\n              <i className={`${digimon.slots == 3 ? 'fas' : 'far'} fa-square`}/>\n            </Icon>\n          </div>\n          <Icon style={{ fontSize: '0.6rem' }}>\n            <span className=\"fa-stack\">\n              <i className=\"fas fa-stack-2x fa-square\"/>\n              <span className=\"fas fa-stack-1x has-text-white\" children={digimon.memory} />\n            </span>\n          </Icon>\n        </div>\n      </Box>\n    )\n  }\n}","import React, { FormEvent, ReactNode, HTMLProps } from 'react'\nimport {\n  Navbar,\n  Tabs,\n  Card,\n  Input\n} from 'bulma-styled-components'\n\n\ntype Props = {\n\n}\ntype State = {\n  menu: boolean\n}\n\n\nexport class Header extends React.Component<Props, State> {\n  render() {\n    function match(path: string) {\n      return window.location.hash === path ? 'is-active' : undefined\n    }\n    return (\n      <Navbar className=\"is-fixed-top is-primary\">\n        <div style={{ position: 'relative' }}>\n          <Tabs className=\"is-boxed is-centered\" style={{ position: 'absolute', left: 0, right: 0, top: 10 }}>\n            <ul>\n              <li className={match(\"#/\")}><a href=\"#/\" className=\"is-active\">Digimon</a></li>\n              <li className={match(\"#/moves\")}><a href=\"#/moves\">Moves</a></li>\n              <li className={match(\"#/supports\")}><a href=\"#/supports\">Support Skills</a></li>\n            </ul>\n          </Tabs>\n        </div>\n      </Navbar>\n    )\n  }\n}\n\nexport function HeaderSearch({ Icon, children, ...props}: HeaderSearchProps) {\n  return (\n    <div style={{ height: 30 }}>\n      <Card style={{ position: 'fixed', top: 52, left: 0, right: 0, zIndex: 100 }}>\n        <Card.Header className=\"has-background-grey-lighter\">\n          <Card.Header.Title>\n            <Input className=\"is-primary\" {...props}/>\n          </Card.Header.Title>\n          {Icon && <Card.Header.Icon children={Icon}/>}\n        </Card.Header>\n        {children && <Card.Content className=\"has-background-grey-lighter\" children={children}/>}\n      </Card>\n    </div>\n  )\n}\n\ntype HeaderSearchProps = {\n  Icon?: ReactNode,\n  children?: ReactNode\n} & HTMLProps<any>","import React, { HTMLProps } from 'react'\nimport { Icon } from 'bulma-styled-components'\n\ntype Props = {\n  onClick: () => void,\n  fav?: boolean\n} & HTMLProps<any>\n\nexport class Favorite extends React.PureComponent<Props> {\n  render() {\n    const { onClick, fav, ...props } = this.props\n    return (\n      <Icon onClick={onClick} {...props}>\n        <i className={`${fav ? 'fas' : 'far'} fa-lg fa-heart has-text-primary`}/>\n      </Icon>\n    )\n  }\n}","import { db } from './'\n\n\nexport interface IDigimon {\n  id: number;\n  name: string;\n  stage: string;\n  type: string;\n  attribute: string;\n  memory: number;\n  slots: number;\n  image: string;\n  sprite: string;\n  favorite: boolean;\n  support_skill_id: number;\n  stats: {\n    [level: string]: IStats\n  };\n}\n\nexport class Digimon implements IDigimon {\n  id: number;\n  name: string;\n  stage: string;\n  type: string;\n  attribute: string;\n  memory: number;\n  slots: number;\n  image: string;\n  sprite: string;\n  favorite: boolean = false;\n  support_skill_id: number;\n  digivolveTo?: IDigivoleInfo[] = [];\n  digivolveFrom?: IDigivoleInfo[] = [];\n  moves?: IMoveInfo[];\n  supportSkill?: Support;\n  stats: {\n    [level: string]: IStats\n  };\n\n  constructor(digimon: IDigimon) {\n    Object.assign(this, digimon)\n  }\n\n  async toggleFavorite() {\n    this.favorite = !this.favorite\n    return db.digimon.update(this.id, { favorite: this.favorite })\n  }\n\n  async join() {\n    const [\n      support_skill,\n      digivolveToData,\n      digivolveFromData,\n      movelearns\n    ] = await Promise.all([\n      db.supports.get(this.support_skill_id),\n      db.digivolve.where('from').equals(this.id).toArray(),\n      db.digivolve.where('to').equals(this.id).toArray(),\n      db.movelearn.where('digimon_id').equals(this.id).sortBy('level'),\n    ])\n    this.supportSkill = support_skill\n\n    const [\n      moves,\n      digivolveTo,\n      digivolveFrom\n    ] = await Promise.all([\n      db.moves.where('id').anyOf(movelearns.map(({ move_id }) => move_id)).toArray(),\n      db.digimon.where('id').anyOf(digivolveToData.map(({ to }) => to)).toArray(),\n      db.digimon.where('id').anyOf(digivolveFromData.map(({ from }) => from)).toArray(),\n    ])\n\n    const moveMap = moves.reduce((map, move) => {\n      map[move.id] = move\n      return map\n    }, {} as { [move_id: string]: Move })\n    this.moves = movelearns.map((movelearn) => {\n      return {\n        move: moveMap[movelearn.move_id],\n        level: movelearn.level\n      }\n    })\n\n    const digivolveToMap = digivolveToData.reduce((map, digi) => {\n      map[digi.to] = {\n        level: digi.level,\n        require: digi.require,\n      }\n      return map\n    }, {} as { [move_id: string]: {level:number, require:string} })\n    this.digivolveTo = digivolveTo.map((digi) => {\n      const ret = digivolveToMap[digi.id]\n      return {\n        level: ret.level,\n        require: ret.require,\n        digimon: digi\n      }\n    })\n\n    const digivolveFromMap = digivolveFromData.reduce((map, digi) => {\n      map[digi.from] = {\n        level: digi.level,\n        require: digi.require,\n      }\n      return map\n    }, {} as { [move_id: string]: {level:number, require:string} })\n    this.digivolveFrom = digivolveFrom.map((digi) => {\n      const ret = digivolveFromMap[digi.id]\n      return {\n        level: ret.level,\n        require: ret.require,\n        digimon: digi\n      }\n    })\n  }\n}\n\ninterface IDigivoleInfo {\n  level: number,\n  require: string,\n  digimon: Digimon,\n}\n\ninterface IMoveInfo {\n  level: number,\n  move: Move,\n}\n\nexport interface IStats {\n  hp: number,\n  sp: number,\n  atk: number,\n  def: number,\n  int: number,\n  spd: number\n}\n\nexport class Move {\n  id: number;\n  name: string;\n  sp_cost: number;\n  type: string;\n  power: number;\n  attribute: string;\n  inheritable: string;\n  description: string;\n\n  async digimon(): Promise<Digimon[]> {\n    return []\n  }\n}\n\nexport class Support {\n  id: number;\n  name: string;\n  description: string;\n}\n\nexport interface IMoveLearn {\n  digimon_id: number,\n  level: number,\n  move_id: number\n}\n\nexport interface IDigivolve {\n  from: number,\n  to: number,\n  level: number,\n  require: string\n}\n","import Dexie from 'dexie'\nimport { Digimon, Move, Support, IMoveLearn, IDigivolve } from './Objects'\nimport { populate } from './Populate';\n\n\nexport class Database extends Dexie {\n  digimon: Dexie.Table<Digimon, number>\n  moves: Dexie.Table<Move, number>\n  supports: Dexie.Table<Support, number>\n  movelearn: Dexie.Table<IMoveLearn, number>\n  digivolve: Dexie.Table<IDigivolve, number>\n\n  constructor() {\n    super('DigiDB', { autoOpen: true })\n    this.version(1).stores({\n      digimon: `id,&name,stage,type,attribute,memory,slots,support_skill_id`,\n      // ,stats.01.hp,stats.01.sp,stats.01.atk,stats.01.def,stats.01.int,stats.01.spd,stats.99.hp,stats.99.sp,stats.99.atk,stats.99.def,stats.99.int,stats.99.spd,stats.50.hp,stats.50.sp,stats.50.atk,stats.50.def,stats.50.int,stats.50.spd\n      moves: 'id, name, sp_cost, type, power, attribute, inheritable, description',\n      supports: 'id, name, description',\n      movelearn: '++, digimon_id, move_id, &[digimon_id+move_id], level',\n      digivolve: '++, from, to, [from+to], level',\n    })\n\n    this.table('digimon').mapToClass(Digimon)\n    this.table('moves').mapToClass(Move)\n    this.table('supports').mapToClass(Support)\n\n    this.digimon = this.table('digimon')\n    this.moves = this.table('moves')\n    this.supports = this.table('supports')\n    this.movelearn = this.table('movelearn')\n    this.digivolve = this.table('digivolve')\n\n    populate(this)\n  }\n\n}","import { Database } from './Database'\n\nexport const db = new Database()","import { Database } from './Database'\nimport data from './data.json'\nimport { Digimon, IDigimon, Move } from './Objects';\n\nexport function populate(db: Database) {\n  db.on('populate', () => {\n    console.log('populating')\n    try {\n      db.digimon.bulkPut(data.digimon as unknown as Digimon[] )\n      db.moves.bulkPut(data.moves as Move[])\n      db.supports.bulkPut(data.supports)\n      db.movelearn.bulkPut(data.movelearn)\n      db.digivolve.bulkPut(data.digivolve)\n    } catch (e) {\n      console.log(e)\n    }\n    console.log('population done')\n  })\n}\n","import React, { Component, FormEvent } from \"react\";\nimport {\n  Input,\n  Checkbox,\n  Card,\n  Icon\n} from 'bulma-styled-components'\nimport { DigimonCard } from '../../components/DigimonCard'\nimport { HeaderSearch } from '../../components/Header'\nimport { Favorite } from '../../components/Favorite'\nimport { db } from '../../Data'\nimport { Digimon } from '../../Data/Objects'\n\ntype State = {\n  digimon: Digimon[]\n  name: string\n  favorites: boolean\n}\n\n\nexport class Home extends Component<{},State> {\n  private static State: State = {\n    digimon: [],\n    name: '',\n    favorites: false\n  }\n\n  constructor(props: {}) {\n    super(props)\n    this.state = Home.State\n  }\n\n  async componentDidMount() {\n    const digimon = await db.digimon.toArray()\n    this.setState({ digimon })\n  }\n\n  async componentWillUnmount() {\n    Home.State = this.state\n  }\n\n  onChange = (e: any) => {\n    this.setState({ name: e.target.value.toLowerCase() })\n  }\n\n  toggleFavorite = () => {\n    this.setState({ favorites: !this.state.favorites })\n  }\n\n  filter = (digimon: Digimon) => {\n    const { name, favorites } = this.state\n    if (favorites && !digimon.favorite) return false\n    if (name && !digimon.name.toLowerCase().includes(name)) return false\n    return true\n  }\n\n  render() {\n    const { favorites, name } = this.state\n    return (\n      <div>\n        <HeaderSearch\n          Icon={<Favorite onClick={this.toggleFavorite} fav={favorites} />}\n          placeholder=\"Filter by Name\"\n          onChange={this.onChange}\n          value={name}\n        />\n        <div style={{ display: 'flex', flexDirection: 'row', flexWrap: 'wrap', justifyContent: 'center' }}>\n          {this.state.digimon.filter(this.filter).map((digimon) => (\n            <DigimonCard\n              link\n              key={digimon.id}\n              digimon={digimon}\n            />\n          ))}\n        </div>\n      </div>\n    )\n  }\n}","import React, { PureComponent } from \"react\";\nimport {\n  Card,\n  Content,\n  Icon,\n} from 'bulma-styled-components'\nimport { Move, Digimon } from '../Data/Objects'\n\ntype Props = {\n  move: Move\n  withDigimon?: boolean\n  level?: number\n}\n\ntype State = {\n  open: boolean\n  digimon?: Digimon[]\n  digimonOpen: boolean\n}\n\nconst AttrMap: { [type: string]: string } = {\n  Neutral: 'fas fa-minus',\n  Plant: 'fas fa-seedling',\n  Light: 'fas fa-sun',\n  Water: 'fas fa-tint',\n  Wind: 'fas fa-wind',\n  Dark: 'fas fa-moon',\n  Earth: 'fas fa-mountain',\n  Fire: 'fas fa-fire-alt',\n  Electric: 'fas fa-bolt',\n}\n\nconst textMap: { [type: string]: string } = {\n  Earth: 'has-text-white-bis',\n  Dark: 'has-text-white-bis',\n  Fire: 'has-text-white-bis',\n  Water: 'has-text-white-bis',\n  Plant: 'has-text-white-bis',\n}\n\nconst TypeMap: { [type: string]: string } = {\n  Physical: 'fas fa-fist-raised',\n  Magic: 'fas fa-hat-wizard',\n  Support: 'fas fa-hands-helping',\n  Fixed: 'fas fa-vector-square',\n}\n\n\nexport class MoveCard extends PureComponent<Props, State> {\n  state: State = {\n    open: false,\n    digimonOpen: false\n  }\n\n  async componentDidMount() {\n    if (!this.props.withDigimon) return\n    const digimon = await this.props.move.digimon()\n    this.setState({ digimon })\n  }\n\n  toggleOpen = () => {\n    this.setState({ open: !this.state.open, digimonOpen: false })\n  }\n\n  toggleDigimon = () => {\n    this.setState({ digimonOpen: !this.state.digimonOpen })\n  }\n\n  render() {\n    const { move, level, withDigimon } = this.props\n    const { open, digimon, digimonOpen } = this.state\n    return (\n      <>\n        <Card>\n          <Card.Header className={`has-background-e-${move.attribute.toLowerCase()}`} onClick={this.toggleOpen}>\n            <Card.Header.Title className={textMap[move.attribute]}>\n              #{move.id} {move.name}\n            </Card.Header.Title>\n            <Card.Header.Icon className={textMap[move.attribute]}>\n              <Icon>\n                <i className={TypeMap[move.type]}/>\n              </Icon>:\n              <Icon>\n                <i className={AttrMap[move.attribute]}/>\n              </Icon>\n              {level ? `LV. ${level}`:`#${move.id.toString().padStart(3, '0')}`}\n            </Card.Header.Icon>\n          </Card.Header>\n          {open && (\n            <Card.Content>\n              <Content>\n                {move.description}\n              </Content>\n            </Card.Content>\n          )}\n          <Card.Footer className=\"is-size-7\">\n            <Card.Footer.Item >\n              <strong style={{paddingRight: 5}}>Power: </strong> {move.power}\n            </Card.Footer.Item>\n            <Card.Footer.Item>\n              <strong style={{paddingRight: 5}}>Cost: </strong> {move.sp_cost}\n            </Card.Footer.Item>\n            <Card.Footer.Item>\n              <strong style={{paddingRight: 5}}>Inherit: </strong> {move.inheritable}\n            </Card.Footer.Item>\n            {withDigimon && (\n              <Card.Footer.Item as=\"a\" onClick={this.toggleDigimon}>\n                <strong style={{paddingRight: 5}}>Digimon: </strong> {digimon ? digimon.length : (\n                  <Icon className=\"is-small\">\n                    <i className=\"fas fa-spinner fa-pulse\" />\n                  </Icon>\n                )}\n              </Card.Footer.Item>\n            )}\n          </Card.Footer>\n        </Card>\n        {withDigimon && digimonOpen && digimon && digimon.length && (\n          <Card>\n            <Card.Content>\n\n            </Card.Content>\n          </Card>\n        )}\n      </>\n    )\n  }\n}","import React, { Component } from \"react\";\nimport { DigimonCard } from '../../components/DigimonCard'\nimport { MoveCard } from '../../components/MoveCard'\nimport { Favorite } from '../../components/Favorite'\nimport { Media, Box, Card, Content, Table, Checkbox, Icon, Level } from 'bulma-styled-components'\nimport { db } from '../../Data'\nimport { Digimon as IDigimon } from '../../Data/Objects'\n\ntype State = {\n  digimon?: IDigimon,\n  stats?: string\n}\n\ntype Props = {\n  match: {\n    params: {\n      id: string\n    }\n  }\n}\n\n\nexport class Digimon extends Component<Props,State> {\n  state: State = {}\n\n  async componentDidMount() {\n    const digimon = await db.digimon.get(parseInt(this.props.match.params.id))\n    if (digimon) {\n      digimon.join().then(() => {\n        this.setState({ digimon })\n      })\n    }\n    this.setState({ digimon })\n  }\n\n  async componentWillReceiveProps(props: Props) {\n    if (this.props.match.params.id === props.match.params.id) return\n    const digimon = await db.digimon.get(parseInt(props.match.params.id))\n    if (digimon) {\n      digimon.join().then(() => {\n        this.setState({ digimon })\n      })\n    }\n    this.setState({ digimon })\n  }\n\n  favorite = async () => {\n    const { digimon } = this.state\n    if (!digimon) return\n    await digimon.toggleFavorite()\n    this.setState({ digimon })\n\n  }\n  changeStat(level: string) {\n    return () => this.setState({ stats: this.state.stats === level ? undefined : level })\n  }\n\n  render() {\n    const { digimon, stats } = this.state\n    if (!digimon) return null\n    return (\n      <div>\n        <Card>\n          <Card.Header className=\"has-background-primary\">\n            <Card.Header.Title className=\"has-text-white-ter\">\n              #{digimon.id.toString().padStart(3, '0')} {digimon.name}\n            </Card.Header.Title>\n            <Card.Header.Icon className=\"has-text-white-ter\">\n              {digimon.stage}\n            </Card.Header.Icon>\n          </Card.Header>\n          <Card.Content>\n            <Media>\n              <Media.Left as=\"figure\">\n                <DigimonCard\n                  nameless\n                  digimon={digimon}\n                />\n              </Media.Left>\n              <Media.Content>\n                <Content style={{ position: 'relative' }}>\n                  <Favorite\n                    style={{ position: 'absolute', top: 0, right: 0 }}\n                    onClick={this.favorite}\n                    fav={digimon.favorite}\n                  />\n                  <span style={{ textDecorationLine: 'underline' }}>\n                    <strong>{digimon.supportSkill && digimon.supportSkill.name}</strong>\n                  </span>\n                  <br/>\n                  {digimon.supportSkill && digimon.supportSkill.description}\n                </Content>\n              </Media.Content>\n            </Media>\n          </Card.Content>\n          <Card.Footer>\n            <Card.Footer.Item as=\"a\" onClick={this.changeStat('01')}>LV. 01</Card.Footer.Item>\n            <Card.Footer.Item as=\"a\" onClick={this.changeStat('50')}>LV. 50</Card.Footer.Item>\n            <Card.Footer.Item as=\"a\" onClick={this.changeStat('99')}>LV. 99</Card.Footer.Item>\n          </Card.Footer>\n        </Card>\n        {stats && (\n          <Card>\n            <Card.Content className=\"is-paddingless\">\n              <Table className=\"is-bordered is-fullwidth is-size-7\">\n                <thead>\n                  <tr>\n                    <th>HP</th>\n                    <th>SP</th>\n                    <th>ATK</th>\n                    <th>DEF</th>\n                    <th>INT</th>\n                    <th>SPD</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td>{digimon.stats[stats].hp}</td>\n                    <td>{digimon.stats[stats].sp}</td>\n                    <td>{digimon.stats[stats].atk}</td>\n                    <td>{digimon.stats[stats].def}</td>\n                    <td>{digimon.stats[stats].int}</td>\n                    <td>{digimon.stats[stats].spd}</td>\n                  </tr>\n                </tbody>\n              </Table>\n            </Card.Content>\n          </Card>\n        )}\n        <br/>\n        <Box className=\"is-paddingless is-clipped\">\n          <Table className=\"is-bordered is-fullwidth\">\n            <thead className=\"has-background-primary\">\n              <tr>\n                <th className=\"has-text-white-ter\">Digi. Fr.</th>\n                <th className=\"has-text-white-ter\">Level</th>\n                <th className=\"has-text-white-ter\">Requires</th>\n              </tr>\n            </thead>\n            <tbody>\n              {digimon.digivolveFrom && digimon.digivolveFrom.map((data) => (\n                <tr key={data.digimon.id}>\n                  <td>\n                    <DigimonCard link digimon={data.digimon}/>\n                  </td>\n                  <td>{data.level}</td>\n                  <td>{data.require}</td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </Box>\n        <Box className=\"is-paddingless is-clipped\">\n          <Table className=\"is-bordered is-fullwidth\">\n            <thead className=\"has-background-primary\">\n              <tr>\n                <th className=\"has-text-white-ter\">Digi. To.</th>\n                <th className=\"has-text-white-ter\">Level</th>\n                <th className=\"has-text-white-ter\">Requires</th>\n              </tr>\n            </thead>\n            <tbody>\n              {digimon.digivolveTo && digimon.digivolveTo.map((data) => (\n                <tr key={data.digimon.id}>\n                  <td>\n                    <DigimonCard link digimon={data.digimon}/>\n                  </td>\n                  <td>{data.level}</td>\n                  <td>{data.require}</td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </Box>\n        {digimon.moves && digimon.moves.map((data) => (\n          <MoveCard key={data.move.id} move={data.move} level={data.level}/>\n        ))}\n      </div>\n    )\n  }\n}","import React, { Component } from \"react\";\nimport { MoveCard } from '../../components/MoveCard'\nimport { HeaderSearch } from '../../components/Header'\nimport { db } from '../../Data'\nimport { Move } from '../../Data/Objects'\nimport { Icon } from \"bulma-styled-components\";\n\ntype State = {\n  moves: Move[]\n  name: string\n  filterOpen: boolean\n}\n\n\nexport class Moves extends Component<{},State> {\n  private static State: State = {\n    moves: [],\n    name: '',\n    filterOpen: false,\n  }\n\n  constructor(props: {}) {\n    super(props)\n    this.state = Moves.State\n  }\n\n  async componentDidMount() {\n    const moves = await db.moves.toArray()\n    this.setState({ moves })\n  }\n\n  async componentWillUnmount() {\n    Moves.State = this.state\n  }\n\n  onChange = (e: any) => {\n    this.setState({ name: e.target.value.toLowerCase() })\n  }\n\n  moveFilter = (move: Move) => {\n    const { name } = this.state\n    if (!name) return true\n    const words = name.split(/\\s+/)\n    for (let word of words) {\n      if (\n        !move.name.toLowerCase().includes(word.toLowerCase()) &&\n        !move.description.toLowerCase().includes(word.toLowerCase())\n      ) return false\n    }\n    return true\n  }\n\n  toggleFilters = () => {\n    this.setState({ filterOpen: !this.state.filterOpen })\n  }\n\n  render() {\n    const { name, filterOpen } = this.state\n    return (\n      <div>\n        <HeaderSearch\n          Icon={<FilterIcon onClick={this.toggleFilters}/>}\n          onChange={this.onChange}\n          placeholder=\"Filter by Name\"\n          value={name}\n        >\n        {filterOpen && (\n          <div>Filters Coming Soon</div>\n        )}\n        </HeaderSearch>\n        <div >\n          {this.state.moves.filter(this.moveFilter).map((move) => (\n            <div key={move.id}>\n              <MoveCard\n                withDigimon={true}\n                move={move}\n              />\n              <br/>\n            </div>\n          ))}\n        </div>\n      </div>\n    )\n  }\n}\n\nclass FilterIcon extends React.PureComponent<{ onClick: () => void }> {\n  render() {\n    const { onClick } = this.props\n    return (\n      <Icon onClick={onClick} style={{ cursor: 'pointer' }} className=\"has-text-primary\">\n        <i className=\"fas fa-lg fa-sliders-h\"/>\n      </Icon>\n    )\n  }\n}","import React, { PureComponent } from \"react\";\nimport {\n  Card,\n  Content,\n  Icon,\n} from 'bulma-styled-components'\nimport { Support } from '../Data/Objects'\n\ntype Props = {\n  support: Support,\n}\n\nexport class SupportCard extends PureComponent<Props> {\n\n  render() {\n    const { support } = this.props\n    return (\n      <Card>\n        <Card.Header className=\"has-background-primary\">\n          <Card.Header.Title className=\"has-text-white-ter\">{support.name}</Card.Header.Title>\n          <Card.Header.Icon>\n            #{support.id.toString().padStart(3, '0')}\n          </Card.Header.Icon>\n        </Card.Header>\n        <Card.Content>\n          <Content>\n            <span>{support.description}</span>\n          </Content>\n        </Card.Content>\n      </Card>\n    )\n  }\n}","import React, { Component } from \"react\";\nimport { HeaderSearch } from '../../components/Header'\nimport { SupportCard } from '../../components/SupportCard'\nimport { db } from '../../Data'\nimport { Support } from '../../Data/Objects'\n\ntype State = {\n  supports: Support[]\n  name: string\n}\n\n\nexport class Supports extends Component<{},State> {\n  private static State: State = {\n    supports: [],\n    name: ''\n  }\n\n  constructor(props: {}) {\n    super(props)\n    this.state = Supports.State\n  }\n\n  async componentDidMount() {\n    const supports = await db.supports.toArray()\n    this.setState({ supports })\n  }\n\n  async componentWillUnmount() {\n    Supports.State = this.state\n  }\n\n  onChange = (e: any) => {\n    this.setState({ name: e.target.value.toLowerCase() })\n  }\n\n  filter = (move: Support) => {\n    const { name } = this.state\n    if (!name) return true\n    const words = name.split(/\\s+/)\n    for (let word of words) {\n      if (\n        !move.name.toLowerCase().includes(word.toLowerCase()) &&\n        !move.description.toLowerCase().includes(word.toLowerCase())\n      ) return false\n    }\n    return true\n  }\n\n  render() {\n    const { name } = this.state\n    return (\n      <div>\n        <HeaderSearch\n          placeholder=\"Filter by Name\"\n          onChange={this.onChange}\n          value={name}\n        />\n        <div >\n          {this.state.supports.filter(this.filter).map((support) => (\n            <div key={support.id}>\n              <SupportCard\n                support={support}\n              />\n              <br/>\n            </div>\n          ))}\n        </div>\n      </div>\n    )\n  }\n}","import React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Container, Section } from 'bulma-styled-components'\nimport { Home } from './Home'\nimport { Digimon } from './Digimon'\nimport { Moves } from './Moves'\nimport { Supports } from './Supports'\n\nexport class Routes extends Component {\n  render() {\n    return (\n      <Section>\n        <Container>\n          <Switch>\n            <Route path=\"/\" exact component={Home}/>\n            <Route path=\"/moves\" component={Moves}/>\n            <Route path=\"/supports\" component={Supports}/>\n            <Route path=\"/digimon/:id\" component={Digimon}/>\n          </Switch>\n        </Container>\n      </Section>\n    )\n  }\n}","\ntype Subscriber = (text: string) => void\n\nexport class NotificationService {\n  private static subscribers: { [id: number]:Subscriber } = {}\n  private static nextID: number = 0\n\n  static async notify(text: string) {\n    Object.values(this.subscribers).forEach((sub) => sub(text))\n  }\n\n  static subscribe(sub: Subscriber) {\n    const id = this.nextID++\n    this.subscribers[id] = sub\n    return () => {\n      delete this.subscribers[id]\n    }\n  }\n\n}","import React from 'react'\nimport { Notification } from 'bulma-styled-components'\nimport { NotificationService } from '../services/Notification';\n\ntype State = {\n  notes:  string[]\n}\n\nexport class NotificationBay extends React.PureComponent {\n  state: State = {\n    notes: []\n  }\n\n  destroy = () => {\n    this.setState({\n      notes: this.state.notes.slice(0, this.state.notes.length - 1)\n    })\n  }\n\n  componentDidMount() {\n    NotificationService.subscribe((text) => {\n      this.setState({\n        notes: this.state.notes.concat(text)\n      })\n    })\n  }\n\n  render() {\n    return (\n      <div style={{ position: 'fixed', right: 10, left: 10, bottom: 10 }}>\n        {this.state.notes.map((note, i) => (\n          <Notification\n            key={i}\n            className=\"is-info is-size-7\"\n            onClick={this.destroy}\n          >{note}</Notification>\n        ))}\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport { BulmaStyledTheme } from 'bulma-styled-components'\nimport { HashRouter } from \"react-router-dom\";\nimport { Routes } from './routes'\nimport { Header } from './components/Header'\nimport { NotificationBay } from './components/NotificationBay'\nimport { Digimon } from './Data/Objects';\n\ntype State = {\n  digimon: Digimon[]\n}\n\nconst ThemeOverrides = {\n  primary: '#0A5',\n  'tabs-link-active-color': '#0A5',\n  'tabs-boxed-link-active-background-color': '#dbdbdb',\n  'tabs-link-color': '#f5f5f5',\n  'custom-colors': {\n    'e-fire': '#e63900',\n    'e-water': '#1a8cff',\n    'e-plant': '#59b300',\n    'e-electric': '#ffff00',\n    'e-earth': '#996633',\n    'e-wind': '#00cc99',\n    'e-neutral': '#999999',\n    'e-light': '#fffae6',\n    'e-dark': '#330033',\n  }\n}\n\n\nclass App extends Component<{}, State> {\n  render() {\n    return (\n      <BulmaStyledTheme overrides={ThemeOverrides}>\n        <HashRouter>\n          <div className=\"has-background-grey-light\" style={{ minHeight: '95vh' }}>\n            <Header />\n            <Routes/>\n            <NotificationBay />\n          </div>\n        </HashRouter>\n      </BulmaStyledTheme>\n    );\n  }\n}\n\nconst body = document.querySelector('body')\nbody && body.classList.add('has-navbar-fixed-top')\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\nimport { NotificationService } from './services/Notification'\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              NotificationService.notify(\n                'New content is available and will be used when all tabs for this page are closed!'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              NotificationService.notify(\n                'Digi DB is now ready for offline use!'\n              )\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      NotificationService.notify(\n        'App is running in offline mode.'\n      )\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}